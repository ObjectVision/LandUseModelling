// ///////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                 Configuration Land Use Scanner - Student Edition                     //
//                          using GeoDMS version 7.130 or newer                         //
//                                                                                      //
//                           Vrije Universiteit Amsterdam                               //
//                               July 2004 - January 2023                               //
//                                                                                      //
// ///////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// This config file contains several evaluation indicators for simulation results       //
//                                                                                      //
// ///////////////////////////////////////////////////////////////////////////////////////

container Evaluation : Descr = "This container contains several evaluation indicators for simulation results"
{
	container Total
	{
		container CurrentLanduse :=
			for_each_nedv(
				  ggEndogenous/Name
				, 'sum(orglanduse/'+ggEndogenous/Name+')'
				, void
				, claimHa
			), Descr = "Total current land use";

		container TotalDemand :=
			for_each_nedv(
				  ggEndogenous/Name
				, 'sum(CaseData/TotalPeriodClaims/'+ggEndogenous/Name+')'
				, void
				, claimHa
			), Descr = "Total Demand";

		container AllocatedLanduse :=
			for_each_nedv(
				  ggEndogenous/Name
				, 'sum(landuse/Endogenous/'+ggEndogenous/Name+')'
				, void
				, claimHa
			), Descr = "Total landuse after allocation";

		container DemandRealisation :=
			for_each_nedv(
				  ggEndogenous/Name
				, '(AllocatedLanduse/'+ggEndogenous/Name+' / TotalDemand/'+ggEndogenous/Name+')'
				, void
				, float32
			), Descr = "Degree to which initial demand is allocated";
	}
	container Regional
	{
		container CurrentLanduse :=
			for_each_nedv(
				  ggEndogenous/Name
				, 'sum(orglanduse/'+ggEndogenous/Name+', Additional_Claims/Regios)'
				, Additional_Claims/RegioUnit
				, claimHa
			), Descr = "Total current land use";

		container Demand :=
			for_each_nedv(
				  ggEndogenous/Name
				, 'CaseData/TotalPeriodClaims/'+ggEndogenous/Name
				, Additional_Claims/RegioUnit
				, claimHa
			), Descr = "Total land demand";

		container AllocatedLanduse :=
			for_each_nedv(
				  ggEndogenous/Name
				, 'sum(landuse/Endogenous/'+ggEndogenous/Name+', Additional_Claims/Regios)'
				, Additional_Claims/RegioUnit
				, claimHa
			), Descr = "Total allocated land use";

		container DemandRealisation :=
			for_each_nedv(
				  ggEndogenous/Name
				, '(AllocatedLanduse/'+ggEndogenous/Name+' / Demand/'+ggEndogenous/Name+')'
				, Additional_Claims/RegioUnit
				, ratio
			), Descr = "Degree to which initial demand is allocated";
	}
	
	container Local
	{
		container DifferenceMaps :=
			for_each_nedv(
				  ggEndogenous/Name
				, '(landuse/Endogenous/'+ggEndogenous/Name+' - orglanduse/'+ggEndogenous/Name+')'
				, domain
				, HaDiff
			), Descr = "Difference allocation - current landuse";

		container Urbanisation : Descr = "Built-up surface per gridcel"
		{
			attribute<Ha>          Builtup_Surface            (domain) := ='add('+asItemList(ggUrban/IsExogenous ? 'landuse/Exogenous/' : 'landuse/Endogenous/'+ ggUrban/Name)+')';
			attribute<YesorNo>     Builtup_Area               (domain) := value(Builtup_Surface > value(15.0, Ha), YesorNo);
			attribute<Ha>          Builtup_Surface_current    (domain) := ='add('+asItemList('orglanduse/' + ggUrban/Name)+')',	IsHidden = "True";
			attribute<YesorNo>     Builtup_Area_current       (domain) := Builtup_Surface_current > value(15.0, Ha);
			attribute<HaDiff>      Difference_Builtup_Surface (domain) := Urbanisation/Builtup_Surface - Urbanisation/Builtup_Surface_current, IsHidden = "True";
			attribute<LossOrGain>  Difference_Builtup_Area    (domain) := value(Urbanisation/Builtup_Area, LossOrGain)- value(Urbanisation/Builtup_Area_current, LossOrGain);

			attribute<Ls_QualPress2k> Pressure_new_builtup (domain) :=
				Difference_Builtup_Surface > 0.2f * domain/NrHaPerCell 
					? value(1, Ls_QualPress2k)
					: value(0, Ls_QualPress2k);
					
			attribute<HaDiff>  Pressure_netEHS (domain) :=
				Current_situation/policy_maps/NatureLandscape/NatureNetwork
					? evaluation/Local/Urbanisation/Difference_Builtup_Surface 
					: 0[Ha]
			,	Label = "Difference Built-up areas in Netto EHS";
			
			attribute<HaDiff>  Pressure_Habitatareas (domain) :=
				Current_situation/policy_maps/NatureLandscape/birdHabitat
					? evaluation/Local/Urbanisation/Difference_Builtup_Surface 
					: 0[Ha]
			,	Label = "Difference Built-up in Habitatareas";
			
			attribute<Ls_QualPress2k> Pressure_LandscapeQuality (domain) := 
				   Urbanisation/Pressure_new_Builtup > 0[Ls_QualPress2k]
				&& Current_situation/thematic_maps/NatureLandscape/Landscape_quality2k > 0[Ls_Qual2k]
					? 1[Ls_QualPress2k]
					: 0[Ls_QualPress2k]
				+  Urbanisation/Pressure_new_Builtup < 1[Ls_QualPress2k]
				&& Current_situation/thematic_maps/NatureLandscape/Landscape_quality2k > 0[Ls_Qual2k]
					? 0[Ls_QualPress2k]
					: 0[Ls_QualPress2k]
			,	Label = "New built-up area in (very) high quality landscapes";
		}
	}
	
	container Floodrisk
		{
		container Current
		{
			attribute<LUclasses> LandUse              (domain)                 := Current_situation/current_landuse/predominant, Label = "Current dominant land use";
			attribute<mEur>      LU_Damage            (domain)                 := ='switch(
																						'+asItemList('case(LandUse == LUclasses/V/'+LUclasses/name+'[LUclasses]
																												, /Scenario_Components/Floodrisk/Curr/DepthDataFactors/'+LUclasses/Name+')')+'
																									, 0f
																						)
																					* LUclasses/MaxDamagePerHa[LandUse]
																					* domain/NrHaPerCell', Label    = "Potential damage based on dominant land use";
			attribute<mEur>      LU_DamagePerDikeRing (RegionalUnits/DijkRing) := sum(LU_Damage,RegioGrids/DijkRing), Label = "Potential damage aggregated to dike rings";
			attribute<mEur>      ExpertDamage         (RegionalUnits/DijkRing) := RegionalUnits/DijkRing/ExpDamage, Label = "Expert-based damage assessments current situation";
		}
		
		container Result
		{
			//		============= LAND USE SPECIFIC CALCULATIONS
			attribute<LUclasses> LandUse              (domain)              := results/continuous/landuse/Predominant, Label = "Simulated dominant land use";
			attribute<mEur>      LU_Damage            (domain)                 := ='switch(
																						'+asItemList('case(LandUse == LUclasses/V/'+LUclasses/name+'[LUclasses]
																												, /Scenario_Components/Floodrisk/Curr/DepthDataFactors/'+LUclasses/Name+')')+'
																									, 0f
																						)
																					* LUclasses/MaxDamagePerHa[LandUse]
																					* domain/NrHaPerCell', Label    = "Potential damage based on dominant land use";
			attribute<mEur>      LU_DamagePerDikeRing (RegionalUnits/DijkRing) := sum(LU_Damage, RegioGrids/DijkRing), Label = "Potential damage aggregated to dike rings";
			attribute<float32>   LU_DamageChange      (RegionalUnits/DijkRing) := MakeDefined(LU_DamagePerDikeRing  / Current/LU_DamagePerDikeRing,  sum(LU_DamagePerDikeRing ) / sum(Current/LU_DamagePerDikeRing )), Label = "Change ratio of land-use based damage";

			// The expert-based damage assessments for the current situation are multiplied with the damage change ratio to obtain more realistic damage assessments
			attribute <mEur>     ExpertDamage      (RegionalUnits/DijkRing) := (Current/ExpertDamage * LU_DamageChange) == 0[mEur] ? LU_DamagePerDikering * sum(Current/ExpertDamage * LU_DamageChange) / sum(Current/LU_DamagePerDikering ) : (Current/ExpertDamage * LU_DamageChange), Label = "Expert-based assessments * change ratio";
				
			attribute <mEur_Yr>  AnnualRisk           (RegionalUnits/DijkRing) := ExpertDamage  / RegionalUnits/DijkRing/NormPeriod, Label = "Annual flood risk";
		}
	}
}